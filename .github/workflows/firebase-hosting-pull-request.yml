name: Deploy to Firebase Hosting on PR

on: pull_request

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env:
          - test
          - prod

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.12.2'  # Update to the Node.js version you have locally

    - name: Install Angular CLI
      run: npm install -g @angular/cli

    - name: Install dependencies
      run: npm install

    - name: Set environment variables
      run: |
        echo "ENV=${{ matrix.env }}" >> $GITHUB_ENV
        echo "MULTI_TENANT=${{ secrets.MULTI_TENANT_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "COMPANY_NAME=${{ secrets.COMPANY_NAME_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "PAID=${{ secrets.PAID_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "AUTHORIZED_EMAILS=${{ secrets.AUTHORIZED_EMAILS_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "PLATFORM_URL=${{ secrets.PLATFORM_URL_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "VERSION=${{ secrets.VERSION_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "BEGIN=${{ secrets.BEGIN_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "STRIPE_KEY=${{ secrets.STRIPE_KEY_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "STRIPE_TEST_MODE=${{ secrets.STRIPE_TEST_MODE_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "LINK_PREVIEW=${{ secrets.LINK_PREVIEW_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "BACKEND_URL=${{ secrets.BACKEND_URL_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "TALIFERRO_TENANT_ID=${{ secrets.TALIFERRO_TENANT_ID_${{ matrix.env | upper }}}}" >> $GITHUB_ENV
        echo "HOME_PAGE=${{ secrets.HOME_PAGE_${{ matrix.env | upper }}}}" >> $GITHUB_ENV

    - name: Set environment files
      run: node set-env.js

    - name: Build the project
      run: npm run build -- --configuration=${{ matrix.env }}

    - name: Deploy to Firebase Hosting
      env:
        FIREBASE
        - name: Deploy to Firebase Hosting
        env:
          FIREBASE_SERVICE_ACCOUNT_TEST: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TEST }}
          FIREBASE_SERVICE_ACCOUNT_PROD: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}
        run: |
          if [ "${{ matrix.env }}" == "prod" ]; then
            echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}" > ${HOME}/firebase-prod.json
            firebase use --add --token "$(cat ${HOME}/firebase-prod.json | jq -r '.token')" --alias prod
            firebase deploy --only hosting:prod --token "$(cat ${HOME}/firebase-prod.json | jq -r '.token')"
          else
            echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_TEST }}" > ${HOME}/firebase-test.json
            firebase use --add --token "$(cat ${HOME}/firebase-test.json | jq -r '.token')" --alias test
            firebase deploy --only hosting:test --token "$(cat ${HOME}/firebase-test.json | jq -r '.token')"