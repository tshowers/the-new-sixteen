rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /carts/{cartId} {
    	allow read, write: if true;
    }
    match /communications/{communicationId} {
    	allow read, write: if true;
    }
    match /saved-carts/{savedCartsId} {
    	allow read, write: if true;
    }
    match /lab-orders/{labOrderId} {
      allow write: if true;
    	allow read: if isSignedIn();
      allow delete: if isSignedIn();
    }
    match /project-documents/{projectDocId} {
    	allow read, write: if true;
    }
    match /project-doc-categories/{projectDocCatId} {
    	allow read, write: if true;
    }
    match /orders/{orderId} {
    	allow read: if isSignedIn();
      allow write: if true;
    }
    match /lis-practitioners/{pracID} {
      allow read: if true;
    }
    match /categories/{categoryId} {
    	allow read: if true;
      allow write: if isSignedIn();
    }
    match /daily-reports/{reportId} {
      allow read: if isSignedIn() && isAdmin();
    }
    match /product-types/{productTypeId} {
    	allow read: if true;
      allow write: if isSignedIn();
    }
    match /sub-categories/{subCategoryId} {
    	allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    match /product-dependencies/{productDependencyId} {
    	allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    match /contacts/{contactId} {
    	allow read, write: if true;
    }
    match /customers/{custId} {
    	allow create: if incomingData().last_name != null;
    	allow read: if isSignedIn() && isAdmin();
    }
    match /invalid-orders/{docId} {
    	allow read: if isSignedIn() && isAdmin();
      allow delete: if isSignedIn() && isSuper();
    }
match /reports/{reportId} {
    	allow read, write: if isSignedIn() && isAdmin();
      allow delete: if isSignedIn() && isSuper();
    }
match /kit-registrations/{kitRegistrationId} {
    	allow read: if isSignedIn();
      allow create: if incomingData().email != '';
      allow update: if isSignedIn();
      allow delete: if isSignedIn() && isSuper();
    }
    match /products/{productId} {
    	allow read: if true;
      allow write: if isSignedIn();
    }
    match /tasks/{taskId} {
    	allow read, write: if true;

    }

    match /settings/{settingsId} {
    	allow read: if true;
      allow write: if isSignedIn();
    }
    match /test-kits/{testkitId} {
    	allow read, write: if isSignedIn();
    }
    match /categories/{categoryId} {
    	allow read: if true;
    }
    match /product-types/{productTypeId} {
    	allow read: if true;
    }
    match /users/{userId} {
    	allow read: if true;
      allow create: if incomingData().email != '';
      allow update, delete: if isOwner(userId); 
    }
    
    
    
    /// Functions ///
    function getUserData() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    }
     function isSuper() {
    	return getUserData().roles.hasAny(['super']);
    }
    function isAdmin() {
    	return getUserData().roles.hasAny(['admin']);
    }
    function isSignedIn() {
    	return request.auth != null;
    }
    
    function isOwner(userId) {
    	return request.auth.uid == userId;
    }
    
    function incomingData() {
    	return request.resource.data;
    }
  }
}